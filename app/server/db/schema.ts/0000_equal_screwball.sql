-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TABLE "transaction_records" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL,
	"seller_wallet" bigint NOT NULL,
	"buyer_wallet" bigint,
	"description" text,
	"title" text,
	"seller_nft" text,
	"buyer_nft" text,
	"views" numeric DEFAULT '0' NOT NULL,
	"likes" numeric DEFAULT '0' NOT NULL,
	"is_sold" boolean DEFAULT false NOT NULL,
	"location" text,
	"is_complete" boolean DEFAULT false NOT NULL
);
--> statement-breakpoint
ALTER TABLE "transaction_records" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"image" text NOT NULL,
	"volume" integer DEFAULT 0 NOT NULL,
	"avg_trans_cost" numeric DEFAULT '0' NOT NULL,
	"rank" bigint DEFAULT '0' NOT NULL,
	"community_count" bigint DEFAULT '0' NOT NULL,
	"background_img" text,
	CONSTRAINT "users_id_key" UNIQUE("id")
);
--> statement-breakpoint
ALTER TABLE "users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "transaction_records" ADD CONSTRAINT "transaction_records_buyer_wallet_fkey" FOREIGN KEY ("buyer_wallet") REFERENCES "public"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "transaction_records" ADD CONSTRAINT "transaction_records_seller_wallet_fkey" FOREIGN KEY ("seller_wallet") REFERENCES "public"."users"("id") ON DELETE no action ON UPDATE no action;
*/